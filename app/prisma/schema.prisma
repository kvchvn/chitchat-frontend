generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Message {
  id        String   @id @default(cuid())
  chatId    String
  senderId  String
  content   String
  chat      Chat     @relation(fields: [chatId], references: [id])
  sender    User     @relation(fields: [senderId], references: [id])
  createdAt DateTime @default(now())
}

model Chat {
  id       String    @id @default(cuid())
  messages Message[]
  users    User[]
}

model User {
  id                String    @id @default(cuid())
  name              String?
  email             String?   @unique
  emailVerified     DateTime?
  image             String?
  accounts          Account[]
  messages          Message[]
  sessions          Session[]
  chats             Chat[]
  friends           User[]    @relation("friendship")
  friendOf          User[]    @relation("friendship")
  incomingRequests  User[]    @relation("friendship_request")
  outcomingRequests User[]    @relation("friendship_request")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
